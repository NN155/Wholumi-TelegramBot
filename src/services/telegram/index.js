const axios = require("axios");
const FormData = require("form-data");
const fs = require("fs");

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;
const TELEGRAM_API_URL = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

class TelegramService {
    
    async newTrade(trade) {
        try {
            console.log(trade);
            const { myCard, tradeCard, tradeId } = trade;
            const message = `–ü—Ä–µ–¥–ª–∞–≥–∞—é—Ç: ${tradeCard.popularity} –∂–µ–ª–∞—é—â–∏—Ö\n–û—Ç–¥–∞–µ–º: ${myCard.popularity} –∂–µ–ª–∞—é—â–∏—Ö\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –æ–±–º–µ–Ω–æ–º:`;

            console.log("üì¢ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...");

            const mediaUrls = [
                `https://animestars.org${tradeCard.src}`,
                `https://animestars.org${myCard.src}`
            ];

            console.log("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã.");

            const mediaGroupResponse = await this.sendMediaGroup(mediaUrls);

            console.log("üì© –û—Ç–≤–µ—Ç –æ—Ç Telegram (–º–µ–¥–∏–∞-–≥—Ä—É–ø–ø–∞):", mediaGroupResponse.data);

            console.log("‚úÖ –ú–µ–¥–∏–∞-–≥—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");

            const replyMarkup = {
                inline_keyboard: [
                    [
                        { text: "‚úÖ –ü—Ä–∏–Ω—è—Ç—å –æ–±–º–µ–Ω", callback_data: JSON.stringify({mod: "trades", action: "accept", id: tradeId}) },
                        { text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –æ–±–º–µ–Ω", callback_data: JSON.stringify({mod: "trades", action: "reject", id: tradeId}) }
                    ]
                ]
            };

            console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏...");

            const textResult = await axios.post(`${TELEGRAM_API_URL}/sendMessage`, {
                chat_id: TELEGRAM_CHAT_ID,
                text: message,
                reply_markup: replyMarkup
            });

            console.log("üì© –û—Ç–≤–µ—Ç –æ—Ç Telegram (—Å–æ–æ–±—â–µ–Ω–∏–µ):", textResult.data);
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –≤ TelegramService.newTrade:", error);
        }
    }

    async sendMediaGroup(mediaUrls) {
        const form = new FormData();
        form.append("chat_id", TELEGRAM_CHAT_ID);

        const mediaArray = mediaUrls.map(url => ({
            type: 'photo', 
            media: url     
        }));

        form.append("media", JSON.stringify(mediaArray));
    
        try {
            const response = await axios.post(`${TELEGRAM_API_URL}/sendMediaGroup`, form, {
                headers: {
                    ...form.getHeaders(),
                },
            });
    
            return response;
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—ã:", error);
            throw new Error("Error sending media group to Telegram.");
        }
    }
}

module.exports = new TelegramService();
